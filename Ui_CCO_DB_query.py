# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'e:\Python\GUI_project\CCO_DB_query.ui'
#
# Created by: PyQt5 UI code generator 5.13.0
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_CCO_database_query(object):
    def setupUi(self, CCO_database_query):
        CCO_database_query.setObjectName("CCO_database_query")
        CCO_database_query.resize(800, 600)
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(11)
        CCO_database_query.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/pic/resources/Mac_Finder_256px_1180091_easyicon.net.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        CCO_database_query.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(CCO_database_query)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.lb_start_datetime = QtWidgets.QLabel(self.centralwidget)
        self.lb_start_datetime.setObjectName("lb_start_datetime")
        self.verticalLayout.addWidget(self.lb_start_datetime)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.horizontalLayout.addLayout(self.verticalLayout)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.start_datetime = QtWidgets.QDateTimeEdit(self.centralwidget)
        self.start_datetime.setMaximumDateTime(QtCore.QDateTime(QtCore.QDate(9999, 12, 31), QtCore.QTime(23, 59, 59)))
        self.start_datetime.setObjectName("start_datetime")
        self.verticalLayout_3.addWidget(self.start_datetime)
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout_3.addWidget(self.lineEdit)
        self.horizontalLayout.addLayout(self.verticalLayout_3)
        self.horizontalLayout_5.addLayout(self.horizontalLayout)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem1)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_2.addWidget(self.label_2)
        self.prod_type = QtWidgets.QLabel(self.centralwidget)
        self.prod_type.setObjectName("prod_type")
        self.verticalLayout_2.addWidget(self.prod_type)
        self.horizontalLayout_2.addLayout(self.verticalLayout_2)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.verticalLayout_4.addWidget(self.lineEdit_2)
        self.cb_prod_type = QtWidgets.QComboBox(self.centralwidget)
        self.cb_prod_type.setObjectName("cb_prod_type")
        self.cb_prod_type.addItem("")
        self.cb_prod_type.addItem("")
        self.cb_prod_type.addItem("")
        self.cb_prod_type.addItem("")
        self.cb_prod_type.addItem("")
        self.cb_prod_type.addItem("")
        self.cb_prod_type.addItem("")
        self.verticalLayout_4.addWidget(self.cb_prod_type)
        self.horizontalLayout_2.addLayout(self.verticalLayout_4)
        self.horizontalLayout_5.addLayout(self.horizontalLayout_2)
        self.gridLayout.addLayout(self.horizontalLayout_5, 0, 0, 1, 1)
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.textBrowser.sizePolicy().hasHeightForWidth())
        self.textBrowser.setSizePolicy(sizePolicy)
        self.textBrowser.setObjectName("textBrowser")
        self.gridLayout.addWidget(self.textBrowser, 1, 0, 1, 1)
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(8)
        sizePolicy.setHeightForWidth(self.tableWidget.sizePolicy().hasHeightForWidth())
        self.tableWidget.setSizePolicy(sizePolicy)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(4)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        self.gridLayout.addWidget(self.tableWidget, 2, 0, 1, 1)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem2)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem3)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem4)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.query = QtWidgets.QPushButton(self.centralwidget)
        self.query.setObjectName("query")
        self.horizontalLayout_3.addWidget(self.query)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem5)
        self.export_id = QtWidgets.QPushButton(self.centralwidget)
        self.export_id.setObjectName("export_id")
        self.horizontalLayout_3.addWidget(self.export_id)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem6)
        self.exit = QtWidgets.QPushButton(self.centralwidget)
        self.exit.setObjectName("exit")
        self.horizontalLayout_3.addWidget(self.exit)
        self.horizontalLayout_4.addLayout(self.horizontalLayout_3)
        self.gridLayout.addLayout(self.horizontalLayout_4, 3, 0, 1, 1)
        CCO_database_query.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(CCO_database_query)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        CCO_database_query.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(CCO_database_query)
        self.statusbar.setObjectName("statusbar")
        CCO_database_query.setStatusBar(self.statusbar)

        self.retranslateUi(CCO_database_query)
        self.exit.clicked.connect(CCO_database_query.close)
        QtCore.QMetaObject.connectSlotsByName(CCO_database_query)

    def retranslateUi(self, CCO_database_query):
        _translate = QtCore.QCoreApplication.translate
        CCO_database_query.setWindowTitle(_translate("CCO_database_query", "CCO芯片ID对应关系导出"))
        self.lb_start_datetime.setText(_translate("CCO_database_query", "开始测试时间："))
        self.label.setText(_translate("CCO_database_query", "首ID倒数5个字符："))
        self.lineEdit.setPlaceholderText(_translate("CCO_database_query", "点击查询自动填入"))
        self.label_2.setText(_translate("CCO_database_query", "派工单号："))
        self.prod_type.setText(_translate("CCO_database_query", "产品型态："))
        self.lineEdit_2.setText(_translate("CCO_database_query", "X201909"))
        self.cb_prod_type.setItemText(0, _translate("CCO_database_query", "单相表"))
        self.cb_prod_type.setItemText(1, _translate("CCO_database_query", "13版三相表"))
        self.cb_prod_type.setItemText(2, _translate("CCO_database_query", "13版集中器"))
        self.cb_prod_type.setItemText(3, _translate("CCO_database_query", "09版三相表"))
        self.cb_prod_type.setItemText(4, _translate("CCO_database_query", "09版集中器"))
        self.cb_prod_type.setItemText(5, _translate("CCO_database_query", "I型采集器"))
        self.cb_prod_type.setItemText(6, _translate("CCO_database_query", "II型采集器"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("CCO_database_query", "测试结果"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("CCO_database_query", "芯片ID"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("CCO_database_query", "模块ID"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("CCO_database_query", "测试日期"))
        self.query.setText(_translate("CCO_database_query", "查询"))
        self.export_id.setText(_translate("CCO_database_query", "导出ID"))
        self.exit.setText(_translate("CCO_database_query", "退出"))
import apprcc_rc
